<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD config 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
						
<mapper namespace="ezen.dteam.mapper.userMapper">
	<!-- resultType: 조회되는 한개한개를 담을 그릇, 즉 VO(풀네임), 한 행에 대한 결과 조회하는 타입 -->
	
	<select id="selectLogin" parameterType="String" resultType="MemberVO">
		SELECT mid, mname, mpw, mnickNm, authority, enabled, 
		mbirth, memail, mgender, mjoinDate,mphone, mno,isWithdrawn
		FROM member 
		WHERE mid = #{value}
	</select>
	<!--String일때 필터이름보단 value를 쓰는게 더 좋음  -->
	
	<insert id="insert" parameterType="MemberVO">
		INSERT INTO member(mid, mpw, mnickNm, mname, mbirth, memail,mgender,
						 mphone, mjoinDate, enabled, authority)
				 VALUES(#{mid}, #{mpw}, #{mnickNm}, #{mname}, #{mbirth}, #{memail},#{mgender},
				 		#{mphone}, now(), 1, 'ROLE_USER')
	</insert>
	
	<!-- 아이디 중복 검사 -->
	<select id="checkId" parameterType="String" resultType="int">
		select count(*) from member where mid = #{mid}
	</select>
	
	<!-- 닉네임 중복 검사 -->
	<select id="checkNickNm" parameterType="String" resultType="int">
		select count(*) from member where mnickNm = #{mnickNm}
	</select>
	
	<!-- 이메일 중복 검사 -->
	<select id="checkEmail" parameterType="String" resultType="int">
		select count(*) from member where memail = #{memail}
	</select>
	<!--  아이디 찾기  -->
	<select id="searchId" parameterType="MemberVO" resultType="String"> 
		select mid from member where mname=#{mname} and mbirth=#{mbirth} and mphone=#{mphone} 
	</select>
	
	<!--  비밀번호 찾기(->변경됨)  -->
	<update id="updatePw" parameterType="MemberVO"> 
		Update member set mpw = #{mpw} where mid = #{mid}
	</update>
</mapper>
