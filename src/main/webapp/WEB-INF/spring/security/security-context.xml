<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 제외 url pattern -->
	<security:http pattern="/resourses/**" security="none"/>
	<!-- 세션을 로그인이 된 경우에만 저장하겠다 -->
	<security:http auto-config="true" use-expressions="true" create-session="never">
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/user/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
		<security:intercept-url pattern="/myInfo/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/> <!-- 가상경로 -->
		<security:intercept-url pattern="/ticket/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:form-login login-page="/login" 
							login-processing-url="/loginOk"
							authentication-success-handler-ref="userLoginSuccessHandler" 
							authentication-failure-handler-ref="userLoginFailureHandler" 
							username-parameter="mid" password-parameter="mpw"/> <!-- 내가 정한 id,pw 필드명으로 넣기 -->
		<security:session-management>
			<!-- 한번에 한사람만, 아니면 로그인페이지로 이동 -->
			<security:concurrency-control max-sessions="1" 
										expired-url="/login" 
										error-if-maximum-exceeded="false"/>
		</security:session-management>
		<security:logout logout-url="/logout" logout-success-url="/"
						invalidate-session="true" delete-cookies="JSESSIONID, SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		<security:access-denied-handler ref="userDeniedHandler"/>
		<security:remember-me key="userkey" token-validity-seconds="86400"/><!-- 하루동안 유지 -->
	</security:http>
	
	<!-- ref와 동일한 값인 id로 빈생성 -->
	<bean id="userLoginSuccessHandler" class="ezen.dteam.service.UserLoginSuccessHandler">
		<constructor-arg name="sqlSession" ref="sqlSession"/> <!-- 생성자 -->
	</bean>
	<bean id="userLoginFailureHandler" class="ezen.dteam.service.UserLoginFailureHandler"/>
	<bean id="userDeniedHandler" class="ezen.dteam.service.UserDeniedHandler"/>
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/><!-- 비크립트는 시큐리티가 가지고있는 걸 사용-->
	<bean id="userService" class="ezen.dteam.service.UserAuthenticationService">
		<constructor-arg name="sqlSession" ref="sqlSession"/> <!-- 생성자 -->
	</bean>
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
